@page "/authors/"
@inject IAuthorRepository _repo


<h3>Index</h3>
<a href="/authors/create/" class="btn btn-primary">
<span class="oi oi-plus"></span>Create new Author</a>


@if (@Model == null)
{
    <LoadingPrompt Message="" />
}
else
{
    @if(Model.Count < 1)
    {
        <LoadingPrompt Message="Rekordow zero" />
    }
    else
    {
        <table class="table embed-responsive bg-white">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
        @foreach (var author in Model)
        {
                    <tr>
                        <td>@author.FirstName</td>
                        <td>@author.LastName</td>
                        <td>
                            <a href="/authors/view/@author.Id" class="btn btn-primary">
                                <span class="oi oi-book"></span>
                            </a>
                            <AuthorizeView Roles="Administrator">
                            <a href="/authors/edit/@author.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <a href="/authors/delete/@author.Id" class="btn btn-danger">
                                <span class="oi oi-x"></span>
                            </a>
                            </AuthorizeView>
                        </td>
                    </tr>
        }
            </tbody>
        </table>
    }
}

@code {
    private IList<Author> Model;

    protected override async Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);
    }

}
